" How I prefer my tabs/spaces
set ts=2 sts=2 sw=2 expandtab

if has('autocmd')
  
  " turn filetype off per the pathogen instructions at
  " http://www.vim.org/scripts/script.php?script_id=2332
  filetype off
  
  call pathogen#runtime_append_all_bundles()
  
  " turn filetype back on after calling pathogen
  filetype on
  filetype plugin on
  
  " set filetypes for a given extension
  au BufRead,BufNewFile *.R set ft=R
  
  " local settings for specific filetypes
  au FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
  au FileType python setlocal ts=4 sts=4 sw=4
  
endif

" set the leader key to the comma
let mapleader=','

" source custom functions
so ~/.dotfiles/vim/functions

" map ,w to StripTrailingWhitespaces()
nnoremap <silent> <leader>w :call StripTrailingWhitespaces()<cr>

" toggle invisibles with ,i
nmap <leader>i :set list!<cr>

" toggle cursorline highlighting
nmap <leader>c :set cursorline!<cr>

" toggle spellcheck with ,s
nmap <leader>s :set spell!<cr>

" toggle previous buffer with ,,
nmap <leader><leader> <c-^>

" open files in the same directory as the current file
cnoremap %% <c-r>=expand('%:h').'/'<cr>
map <leader>e :edit %%
map <leader>v :view %%

" a visual reminder of an 80-character line
if exists('+colorcolumn')
  set colorcolumn=80
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

set autoindent
set smartindent
set hidden
set hlsearch
set list
set number
set ruler
set smarttab
set showcmd
set wildmenu
set ignorecase
set smartcase
set scrolloff=5
set backspace=indent,eol,start " backspace over everything

" mimic TextMate's invisible characters
set listchars=tab:▸\ ,eol:¬

" show current file (filetype) on the left and 
" [cursor position line,colum] [number of lines] on the right
set statusline=%F%m%r%h%w\ (%{&ft})\ %=[%l,%v]\ [%L\ lines]

" show the status line
set laststatus=2

syntax enable

colorscheme ir_black
