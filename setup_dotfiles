#!/usr/bin/env bash

DIR=$(cd $(dirname $0) && pwd)
TARGET="$HOME"
if [ -n "$DOTFILES_TARGET" ]; then
  TARGET="$DOTFILES_TARGET"
fi

ACK="$TARGET/.ackrc"
AGIGNORE="$TARGET/.agignore"
BP="$TARGET/.bash_profile"
BRC="$TARGET/.bashrc"
INPUTRC="$TARGET/.inputrc"
GC="$TARGET/.gitconfig"
GI="$TARGET/.gitignore"
GRC="$TARGET/.gvimrc"
IRC="$TARGET/.irbrc"
SCREEN="$TARGET/.screenrc"
VIM="$TARGET/.vim"
VRC="$TARGET/.vimrc"
ZSHRC="$TARGET/.zshrc"
TERMINATOR="$TARGET/.config/terminator/config"
OHMYZSH="$TARGET/.oh-my-zsh"
OHMYZSHCUSTOM="$TARGET/.oh-my-zsh/custom"

function erase_dotfiles {
  # echo "Erasing dotfiles..."
  rm -f $ACK
  rm -f $AGIGNORE
  rm -f $BP
  rm -f $BRC
  rm -f $INPUTRC
  rm -f $GC
  rm -f $GI
  rm -f $GRC
  rm -f $SCREEN
  rm -f $VIM
  rm -f $VRC
  rm -f $ZSHRC
  rm -f $TERMINATOR

  rm -f $TARGET/.i3/config

  rm -rf $OHMYZSH
}

function create_symlinks {
  # echo "Creating symlinks..."
  ln -rs $DIR/ackrc $ACK
  ln -rs $DIR/agignore $AGIGNORE
  ln -rs $DIR/bash/profile $BP
  ln -rs $DIR/bash/profile $BRC
  ln -rs $DIR/bash/input $INPUTRC
  ln -rs $DIR/git/config $GC
  ln -rs $DIR/git/ignore $GI
  ln -rs $DIR/vim/grc $GRC
  ln -rs $DIR/screenrc $SCREEN
  ln -rs $DIR/vim $VIM
  ln -rs $DIR/vim/rc $VRC
  ln -rs $DIR/zsh/rc $ZSHRC
  ln -rs $DIR/zsh/oh-my-zsh $OHMYZSH

  mkdir -p $TARGET/.i3/
  ln -rs $DIR/i3/config $TARGET/.i3/config
  mkdir -p $TARGET/.config/terminator
  ln -rs $DIR/settings/terminator/config $TERMINATOR

  mkdir -p $OHMYZSHCUSTOM
  ln -rs $DIR/zsh/custom/50-aliases.zsh $OHMYZSHCUSTOM/50-aliases.zsh
  ln -rs $DIR/zsh/custom/50-env.zsh $OHMYZSHCUSTOM/50-env.zsh
  ln -rs $DIR/zsh/custom/50-highlighting.zsh $OHMYZSHCUSTOM/50-highlighting.zsh
  mkdir -p $OHMYZSHCUSTOM/themes
  ln -rs $DIR/zsh/custom/themes/my.zsh-theme $OHMYZSHCUSTOM/themes/my.zsh-theme
  mkdir -p $OHMYZSHCUSTOM/plugins
  for PLUGIN in "$(ls -A $DIR/zsh/custom/plugins/)"; do
    ln -rs $DIR/zsh/custom/plugins/$PLUGIN $OHMYZSHCUSTOM/plugins/$PLUGIN
  done
}

# make sure the directory exists
if [ -d $DIR ]; then

  echo "Replace current dotfiles? [1 or 2]"
  select RN in "Replace" "No"; do
    case $RN in
      Replace )
        cd $DIR
        git submodule update --init --recursive || true
        erase_dotfiles
        create_symlinks
        exit 0
        ;;
      
      No )
        create_symlinks
        exit 0
        ;;
    esac
  done

fi
